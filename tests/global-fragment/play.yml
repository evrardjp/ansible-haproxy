---
- name: Test fail safe from incorrect user input
  hosts: haproxy[0]
  vars:
    haproxy_fragments_folder: "{{ playbook_dir }}/fragments/"
    haproxy_globals:
      - invalidkey: "myhaproxy"
  tasks:
    - name: Deploy and fail due to incorrect global
      block:
        - name: Deploy HAProxy
          ansible.builtin.import_role:
            name: "{{ playbook_dir }}/../../../ansible-haproxy"
      rescue:
        - name: Debug the failure
          ansible.builtin.fail:
            msg: The role should have failed on generation due to invalidkey in global
          when:
            - ansible_failed_task.name != "Sanity check on user input before generating the global fragment"

- name: Test fragments are correct
  hosts: haproxy[0]
  vars:
    haproxy_fragments_folder: "{{ playbook_dir }}/fragments/"
    haproxy_user_fragments:
      - content: |
          listen minimum
            bind :4444
            timeout connect         10s
            timeout client          1m
            timeout server          1m
    haproxy_globals:
      - node: "myhaproxy"
  tasks:
    - name: Deploy HAProxy
      ansible.builtin.import_role:
        name: "{{ playbook_dir }}/../../../ansible-haproxy"

    - name: Find created files
      ansible.builtin.find:
        path: "{{ haproxy_fragments_folder }}"
      register: _files_in_fragments_folder
      delegate_to: localhost

    - name: Set fragments folder content
      ansible.builtin.set_fact:
        _haproxy_fragments_folder_content: "{{ _files_in_fragments_folder.files | map(attribute='path') | list | sort }}"
      delegate_to: localhost

    - name: Show fragments folder content
      ansible.builtin.debug:
        var: _haproxy_fragments_folder_content
      delegate_to: localhost

    - name: Check that the expected fragments are present
      ansible.builtin.assert:
        that:
          - "haproxy_fragments_folder ~ '001_global.cfg' in _haproxy_fragments_folder_content"
          - "haproxy_fragments_folder ~ '000_user_0.cfg' in _haproxy_fragments_folder_content"
      delegate_to: localhost

    - name: Check that fragments' content matches expectations
      ansible.builtin.assert:
        that:
          - "lookup('file', haproxy_fragments_folder ~ '001_global.cfg') | regex_search('node.*myhaproxy') is not none"
          - "lookup('file', haproxy_fragments_folder ~ '000_user_0.cfg') | regex_search('bind.*4444') is not none"
      delegate_to: localhost
