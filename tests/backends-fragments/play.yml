---
- name: Test fail safe from incorrect user input on backend
  hosts: localhost
  connection: local
  vars:
    haproxy_fragments_folder: "{{ playbook_dir }}/fragments/"
    haproxy_backends:
      test1:
        invalidkey: "invalid"
  tasks:
    - name: Deploy and fail due to incorrect backend
      block:
        - name: Deploy HAProxy
          ansible.builtin.import_role:
            name: "{{ playbook_dir }}/../../../ansible-haproxy"
      rescue:
        - name: Debug the failure
          ansible.builtin.fail:
            msg: The role should have failed on generation due to invalidkey in backend
          when:
            - ansible_failed_task.name != "Sanity check on user input before generating the backends"

- name: Deploy with backends
  hosts: localhost
  connection: local
  vars:
    haproxy_fragments_folder: "{{ playbook_dir }}/fragments/"
    haproxy_backends:
      test1:
        no log:
    haproxy_user_fragments:
      - content: |
          listen minimum_fragment_to_pass_haproxy_handler
            bind :4444
            timeout connect         10s
            timeout client          1m
            timeout server          1m
  tasks:
    - name: Deploy HAProxy
      ansible.builtin.import_role:
        name: "{{ playbook_dir }}/../../../ansible-haproxy"

    - name: Find created files
      ansible.builtin.find:
        path: "{{ haproxy_fragments_folder }}"
      register: _files_in_fragments_folder

    - name: Set fragments folder content
      ansible.builtin.set_fact:
        _haproxy_fragments_folder_content: "{{ _files_in_fragments_folder.files | map(attribute='path') | list | sort }}"

    - name: Show fragments folder content
      ansible.builtin.debug:
        var: _haproxy_fragments_folder_content
        verbosity: 1

    - name: Check that the backend fragments are present
      ansible.builtin.assert:
        that:
          - "haproxy_fragments_folder ~ '005_backend_test1.cfg' in _haproxy_fragments_folder_content"

    - name: Check that fragments' content matches expectations
      ansible.builtin.assert:
        that:
          - "lookup('file', haproxy_fragments_folder ~ '005_backend_test1.cfg') | regex_search('no log') is not none"
